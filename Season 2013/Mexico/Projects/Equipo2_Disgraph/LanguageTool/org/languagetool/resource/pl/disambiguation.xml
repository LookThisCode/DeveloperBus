<?xml version="1.0" encoding="utf-8"?>
<!--
        Disambiguation Rules for LanguageTool Copyright (C) 2008
$Id: disambiguation.xml,v 1.31 2011-02-13 12:30:11 milek_pl Exp $
    -->
<rules lang="pl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="../disambiguation.xsd">
    <unification feature="number">
        <equivalence type="sg">
            <token postag=".*:sg:.*" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="pl">
            <token postag=".*:(pl|pltant):.*" postag_regexp="yes"/>
        </equivalence>
    </unification>
    <unification feature="gender">
        <equivalence type="f">
            <token postag=".*[\.:]f([\.:].*)?" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="m1">
            <token postag=".*[\.:]m1([\.:].*)?" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="m2">
            <token postag=".*[\.:]m2([\.:].*)?" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="m3">
            <token postag=".*[\.:]m3([\.:].*)?" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="n1">
            <token postag=".*[\.:]n1([\.:].*)?" postag_regexp="yes"></token>
        </equivalence>
        <equivalence type="n2">
            <token postag=".*[\.:]n2([\.:].*)?" postag_regexp="yes"></token>
        </equivalence>
        <equivalence type="p1">
            <token postag=".*[\.:]p1([\.:].*)?" postag_regexp="yes"></token>
        </equivalence>
        <equivalence type="p2">
            <token postag=".*[\.:]p2([\.:].*)?" postag_regexp="yes"></token>
        </equivalence>
        <equivalence type="p3">
            <token postag=".*[\.:]p3([\.:].*)?" postag_regexp="yes"></token>
        </equivalence>
    </unification>
    <unification feature="case">
        <equivalence type="nom">
            <token postag=".*[\.:]nom([\.:].*)?" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="gen">
            <token postag=".*[\.:]gen([\.:].*)?" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="dat">
            <token postag=".*[\.:]dat([\.:].*)?" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="acc">
            <token postag=".*[\.:]acc([\.:].*)?" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="inst">
            <token postag=".*[\.:]inst([\.:].*)?" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="loc">
            <token postag=".*[\.:]loc([\.:].*)?" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="voc">
            <token postag=".*[\.:]voc([\.:].*)?" postag_regexp="yes"/>
        </equivalence>
    </unification>    
    <rule name="opisany powyżej" id="opisany_powyzej">
        <pattern>
            <token inflected="yes" regexp="yes">pisać|opisać|przedstawić|przedstawiać|podać|zamieścić|wymienić</token>
            <marker>
                <token regexp="yes">powyżej|poniżej</token>
            </marker>
        </pattern>
        <disambig postag="adv:pos:aff"/>
    </rule>    
    <rulegroup name="przeszło|ponad + liczba -> kublik" id="przeszlo">
        <rule>
            <pattern>
                <marker>
                    <token regexp="yes">przeszło|ponad</token>
                </marker>
                <token postag="num.*" postag_regexp="yes"/>
            </pattern>
            <disambig postag="qub"/>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token regexp="yes">przeszło|ponad</token>
                </marker>
                <token inflected="yes" regexp="yes">.+letni</token>
            </pattern>
            <disambig postag="qub"/>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token regexp="yes">przeszło|ponad</token>
                </marker>
                <token inflected="yes" regexp="yes">^(pięć|sześć|siedem|osiem|dziewięć|dziesięć|jedenaście|dwanaście|trzynaście|czternaście|piętnaście|szesnaście|siedemnaście|osiemnaście|dziewiętnaście|dwadzieścia|trzydzieści|czterdzieści|pięćdziesiąt|sześćdziesiąt|siedemdziesiąt|osiemdziesiąt|dziewięćdziesiąt|sto|dwieście|trzysta|czterysta|pięćset|sześćset|siedemset|osiemset|dziewięćset|tysiąc|milion|miliard|bilion)</token>
            </pattern>
            <disambig postag="qub"/>
        </rule>
    </rulegroup>
    <rule name="przeszło" id="PRZESZLO">
        <pattern>
            <marker>
                <token>przeszło</token>
            </marker>
            <token regexp="yes">\d+</token>
        </pattern>
        <disambig action="remove"><wd lemma="przejść"></wd></disambig>
        <example type="untouched">Przeszło trzydziestu panów pije wódkę.</example>
        <example type="ambiguous" inputform="Przeszło[przejść/verb:praet:sg:n1.n2:ter:perf:nonrefl,przejść/verb:praet:sg:n1.n2:ter:perf:refl,przeszło/qub]" outputform="Przeszło[przeszło/qub]"><marker>Przeszło</marker> 30 panów pije wódkę.</example>
    </rule>
    <rule name="prawie/subst -> kublik" id="prawie">
        <pattern>
            <token><exception postag="prep.*inst" postag_regexp="yes"/></token>
            <marker>
                <token>prawie</token>
            </marker>
        </pattern>
        <disambig postag="qub"/>
    </rule>
    <rule name="ciemku" id="ciemku">
        <pattern>
            <marker>
                <token>ciemku</token>
            </marker>
        </pattern>
        <disambig action="add"><wd lemma="po ciemku" pos="adjp">ciemku</wd></disambig>
    </rule>
<!-- 
	<rule name="Nazwy liter" id="AZ">
		<pattern>
			<token><exception inflected="yes">litera</exception></token>
			<marker><token regexp="yes">[A-Za-z]</token></marker>
		</pattern>
		<disambig action="filter" postag="^(?!subst).*$"></disambig>    
		<example type="ambiguous" inputform="i[i/conj,i/interj,i/qub,i/subst:pl:acc:n2,i/subst:pl:dat:n2,i/subst:pl:gen:n2,i/subst:pl:inst:n2,i/subst:pl:loc:n2,i/subst:pl:nom:n2,i/subst:pl:voc:n2,i/subst:sg:acc:n2,i/subst:sg:dat:n2,i/subst:sg:gen:n2,i/subst:sg:inst:n2,i/subst:sg:loc:n2,i/subst:sg:nom:n2,i/subst:sg:voc:n2]" 
		outputform="i[i/conj,i/interj,i/qub]">Ty <marker>i</marker> ja</example>
		<example type="untouched">To litera a jest pierwsza.</example>  
    </rule>
 -->
    <rule name="tym" id="tym">
        <pattern>
            <marker>
                <unify> <feature id="number"/><feature id="gender"/> <feature id="case"/>
                    <token>tym</token>
                    <token postag_regexp="yes" postag="(subst|ger):*"/>
                </unify>
            </marker>
        </pattern>
        <disambig action="unify"/>
    </rule>
        
        <rulegroup name="co (i) rusz" id="CO_RUSZ">
        <rule>
            <pattern >
                <token regexp="yes">co|ani</token>
                <marker>
                    <token>rusz</token>
                </marker>
            </pattern>
            <disambig postag="qub"/>
            <example type="untouched">Rusz tylko tę książkę!</example>
            <example type="ambiguous" inputform="rusz[rusza/subst:pl:gen:f,ruszyć/verb:impt:sg:sec:perf:refl.nonrefl]" outputform="rusz[rusza/qub]">Co <marker>rusz</marker> pyta o godzinę.</example>
        </rule>
        <rule>
            <pattern>
                <token>co</token>
                <token>i</token>
                <marker>
                    <token>rusz</token>
                </marker>
            </pattern>
            <disambig postag="qub"/>
            <example type="untouched">Rusz tylko tę książkę!</example>
            <example type="ambiguous" inputform="rusz[rusza/subst:pl:gen:f,ruszyć/verb:impt:sg:sec:perf:refl.nonrefl]" outputform="rusz[rusza/qub]">Co i <marker>rusz</marker> pyta o godzinę.</example>
        </rule>
    </rulegroup>
    
    <rulegroup name="bez czarny" id="bez_czarny">
    	<rule>
    		<pattern>
    		<marker>
    			<token>bez</token>
    		</marker>
    			<token>czarny</token>
    		</pattern>
    		<disambig action="filter" postag="subst:sg:(acc|nom):m3"></disambig>
    		<example type="untouched">Proszę kremówkę bez kremu.</example>
    		<example type="ambiguous" inputform="bez[bez/prep:gen:nwok,bez/subst:sg:acc:m3,bez/subst:sg:nom:m3,beza/subst:pl:gen:f]" outputform="bez[bez/subst:sg:acc:m3,bez/subst:sg:nom:m3]">Jaki piękny jest <marker>bez</marker> czarny.</example>
    	</rule>
    	<rule>
    		<pattern>
    		<token>dziki</token>
    		<marker>
    			<token>bez</token>
    		</marker>
    		<token><exception postag_regexp="yes" postag=".*gen.*"></exception></token>    			
    		</pattern>
    		<disambig action="filter" postag="subst:sg:(acc|nom):m3"></disambig>
    		<example type="untouched">Proszę kremówkę bez kremu.</example>
    		<example type="ambiguous" inputform="bez[bez/prep:gen:nwok,bez/subst:sg:acc:m3,bez/subst:sg:nom:m3,beza/subst:pl:gen:f]" outputform="bez[bez/subst:sg:acc:m3,bez/subst:sg:nom:m3]">Jaki piękny jest dziki <marker>bez</marker>.</example>
    	</rule>
    	<rule>
    		<pattern>
    		<marker>
    			<token>bez</token>
    		</marker>
    		<token postag_regexp="yes" postag=".*gen.*"></token>    		
    		</pattern>    		
    		<disambig postag="prep:gen:nwok"></disambig>
    		<example type="ambiguous" inputform="bez[bez/prep:gen:nwok,bez/subst:sg:acc:m3,bez/subst:sg:nom:m3,beza/subst:pl:gen:f]" outputform="bez[bez/prep:gen:nwok]">Proszę kremówkę <marker>bez</marker> kremu.</example>
    		<example type="untouched">Jaki piękny jest dziki <marker>bez</marker>.</example>
    	</rule>
    </rulegroup>
    
    <rule name="od to nie oda" id="OD_PREP_GEN">
    <pattern>    		
    		<marker>
    			<token>od</token>
    		</marker>
    		<token postag_regexp="yes" postag=".*gen.*"></token>    		
    		</pattern>    		
    		<disambig postag="prep:gen:nwok"></disambig>    
    	<example type="untouched">Od rok 2000 jestem nieruchawy.</example>
    	<example type="ambiguous" inputform="Od[Oda/subst:pl:gen:f,od/prep:gen:nwok,oda/subst:pl:gen:f]" outputform="Od[od/prep:gen:nwok]"><marker>Od</marker> roku 2000 jestem nieruchawy.</example>
    </rule>
    
    <rule name="dzięki czemu" id="dzieki_prep_dat">
    <pattern>    		
    		<marker>
    			<token>dzięki</token>
    		</marker>
    		<token postag_regexp="yes" postag=".*dat.*"></token>    		
    		</pattern>    		
    <disambig postag="prep:dat"></disambig>    
    <example type="untouched">Dzięki, mała!</example>
    <example type="ambiguous" inputform="dzięki[dzięk/subst:pl:acc:m3,dzięk/subst:pl:nom:m3,dzięk/subst:pl:voc:m3,dzięka/subst:pl:acc:f,dzięka/subst:pl:nom:f,dzięka/subst:pl:voc:f,dzięka/subst:sg:gen:f,dzięki/prep:dat,dzięki/subst:pl:acc:p3,dzięki/subst:pl:nom:p3,dzięki/subst:pl:voc:p3]" outputform="dzięki[dzięki/prep:dat]">To wszystko <marker>dzięki</marker> pomocy europejskiej.</example>	
    </rule>
    
    <rule name="MIMO to nie wołacz" id="MIMO_NIE_VOC">
    	<pattern>
    		<token>mimo</token>
    	</pattern>
    	<disambig postag="prep:gen"/>    	
    </rule>
    
    <rule name="ku to nie subst" id="KU_NIE_SUBST">
    	<pattern>
    		<token>ku</token>
    	</pattern>
    	<disambig postag="prep:dat"/>
    </rule>
    
    <rulegroup name="do - prep lub subst" id="DO_PREP_SUBST">
    <rule>
    	<pattern>
			<marker><token>do</token></marker>
			<token>re</token>    	
    	</pattern>
    	<disambig action="filter" postag="subst.*"/>
    </rule>
    <rule>
    	<pattern>
			<marker><token>do</token></marker>
			<token><exception>re</exception></token>    	
    	</pattern>
    	<disambig postag="prep:gen"/>    
    </rule>
    </rulegroup>
    
    <rule name="względem - prep lub subst" id="wzgledem_subst">
    	<pattern>
    		<token>tym</token>
    		<marker>
    			<token>względem</token>
    		</marker>
    	</pattern>
    	<disambig postag="subst:sg:inst:m3"/>
    	<example type="ambiguous" inputform="względem[wzgląd/subst:sg:inst:m3,względem/prep:gen]" outputform="względem[wzgląd/subst:sg:inst:m3]">Pod tym <marker>względem</marker> Brazylia jest szczególna.</example>
    	<example type="untouched">Nie bądź względem niego taki ostry!</example>
    </rule>
    
    <rule name="godzinę temu" id="temu">
    	<pattern>    		
    		<token regexp="yes" inflected="yes">godzina|rok|miesiąc|tydzień|minuta|chwila|moment|wiek|stulecie</token>
    		<marker><token>temu</token></marker>
    	</pattern>
    	<disambig postag="prep:acc"/>
    	<example type="ambiguous" inputform="temu[temu/prep:acc,ten/adj:sg:dat:m1.m2.m3.n1.n2:pos,to/subst:sg:dat:n2]" outputform="temu[temu/prep:acc]">Było to godzinę <marker>temu</marker>.</example>
    	<example type="untouched">Nie dziwię się temu.</example>
    </rule>
    <rule name="temu to nie prep" id="temu_non_prep">
    	<pattern>
    		<marker><token postag_regexp="yes" postag="adj.*|subst.*">temu</token></marker>
    	</pattern>
    	<disambig action="filter" postag="^(?!prep:acc).*"/>
    	<example type="untouched">To było już godzinę temu.</example>
    	<example type="ambiguous" inputform="temu[temu/prep:acc,ten/adj:sg:dat:m1.m2.m3.n1.n2:pos,to/subst:sg:dat:n2]" outputform="temu[ten/adj:sg:dat:m1.m2.m3.n1.n2:pos,to/subst:sg:dat:n2]">Dziwię się <marker>temu</marker> zachowaniu.</example>
    </rule>     
    
    <rulegroup name="O - dezambiguacja" id="O_brev_interj">
    	<rule>
    		<pattern>
    		<marker><token>o</token></marker>
    		<token regexp="yes">[,!]</token>
    		</pattern>
    		<disambig postag="interj"/>
    		<example type="untouched">O „Gwiazdorze” powiedział coś ciekawego.</example>
    		<example type="ambiguous" inputform="O[o/interj,o/prep:acc,o/prep:loc,ocean/brev:pun,ojciec/brev:pun]" outputform="O[o/interj]"><marker>O</marker>, idzie kościelny!</example>
    	</rule>
    	<rule>
    		<pattern>
    		<marker><token>o</token></marker>
    		<token>.</token>
    		</pattern>
    		<disambig postag="brev:pun"></disambig>
    		<example type="untouched">Porozmawiajmy o literaturze.</example>
    		<example type="ambiguous" inputform="O[o/interj,o/prep:acc,o/prep:loc,ocean/brev:pun,ojciec/brev:pun]" outputform="O[ojciec/brev:pun]"><marker>O</marker>. Pio nie jadał pierogów.</example>
    	</rule>
    </rulegroup>
    
    <rule name="głosować przeciw" id="glosowac_przeciw">
    	<pattern>
    		<token regexp="yes" inflected="yes">głosować|wystąpić</token>
    		<marker><token>przeciw</token></marker>
    	</pattern>
    	<disambig postag="prep:dat"/>
    	<example type="untouched">Przeciw się przemocy!</example>
    	<example type="ambiguous" inputform="przeciw[przeciw/prep:dat,przeciwić/verb:impt:sg:sec:imperf:refl]" outputform="przeciw[przeciw/prep:dat]">Głosujemy <marker>przeciw</marker> tej propozycji.</example>
    </rule>    
            
    <rulegroup name="prep + czasownik -> ~ czasownik" id="prep_verb">
        <!--  przyimki zawsze z tym samym przypadkiem --> 
        <rule>
            <pattern>
                <!--
                <token regexp="yes">[uwz]|[pd]o|ode?|oprócz|dla|(:?po)?między|(:po)?nade?|na|ze|przede?|pode?|podczas|(:?po)?mimo|(:?po)?przez|pośrodku</token>
                -->
                <token postag="prep:[^\.]+" postag_regexp="yes"><exception>co</exception></token>
                <marker>
                    <and>
                        <token><match no="0" postag_regexp="yes" postag="prep:(.*)" postag_replace="(ad[jv]|subst|ppron):[^ ]*$1[^ ]*" setpos="yes"/></token>
                        <token postag="verb.*" postag_regexp="yes"/>
                    </and>
                </marker>
            </pattern>
            <disambig action="filter" postag="adj.*|adv.*|subst.*|ppron.*"/>
            <example type="untouched">Tu mamy piękny przykład sztuki barokowej.</example>
            <example type="ambiguous" inputform="mamy[mama/subst:pl:acc:f,mama/subst:pl:nom:f,mama/subst:pl:voc:f,mama/subst:sg:gen:f,mieć/verb:fin:pl:pri:imperf:refl.nonrefl]" outputform="mamy[mama/subst:pl:acc:f,mama/subst:pl:nom:f,mama/subst:pl:voc:f,mama/subst:sg:gen:f]">Spotykaliśmy się u <marker>mamy</marker>.</example>
        </rule>
        
        <!--  inne przyimki 
        <rule>
            <pattern>
                <!- -
                <token regexp="yes">[uwz]|[pd]o|ode?|oprócz|dla|(:?po)?między|(:po)?nade?|na|ze|przede?|pode?|podczas|(:?po)?mimo|(:?po)?przez|pośrodku</token>
                - ->
                <token postag="prep:.*" postag_regexp="yes"><exception postag="prep:[^\.]+" postag_regexp="yes"/><exception>co</exception></token>
                <marker>
                    <and>
                        <token><match no="0" postag_regexp="yes" postag="prep:(.*)" postag_replace="(ad[jv]|subst|ppron):$1" setpos="yes"/></token>
                        <token postag="verb.*" postag_regexp="yes"/>
                    </and>
                </marker>
            </pattern>
            <disambig action="filter" postag="adj.*|adv.*|subst.*|ppron.*"/>
            <example type="untouched">Tu mamy piękny przykład sztuki barokowej.</example>
            <example type="ambiguous" inputform="mamy[mama/subst:pl:acc:f,mama/subst:pl:nom:f,mama/subst:pl:voc:f,mama/subst:sg:gen:f,mieć/verb:fin:pl:pri:imperf:refl.nonrefl]" outputform="mamy[mama/subst:pl:acc:f,mama/subst:pl:nom:f,mama/subst:pl:voc:f,mama/subst:sg:gen:f]">Stanąłem naprzeciw <marker>mamy</marker>.</example>
        </rule>        
        -->
       <rule>
       	<pattern>
       		<unify>
       			<feature id="case"/>
       			<token postag="prep:.*" postag_regexp="yes"><exception postag="&lt;/?[\p{Lu}:]+&gt;" postag_regexp="yes"/><exception postag="prep.*" negate_pos="yes" postag_regexp="yes"/></token>       			
                <token postag_regexp="yes" postag="(adj|subst|ppron).*"><exception postag="&lt;/?[\p{Lu}:]+&gt;" postag_regexp="yes"/><exception>pewne</exception></token>
       		</unify>
       	</pattern>
       	<disambig action="unify"/>
       	<example type="untouched">Oni mną papiery.</example>
       	<example type="ambiguous" inputform="mną[ja/ppron12:sg:inst:m1.m2.m3.f.n1.n2:pri,miąć/verb:fin:pl:ter:imperf:refl.nonrefl]" outputform="mną[ja/ppron12:sg:inst:m1.m2.m3.f.n1.n2:pri]">Jedź ze <marker>mną</marker>!</example>
       </rule>
    </rulegroup>

	<rule name="do to nie subst" id="do_non_subst">
		<pattern>
			<marker><token>do</token></marker>
			<token postag=".*gen.*" postag_regexp="yes"></token>
		</pattern>
		<disambig postag="prep:gen"/>		
	</rule>
		
	<rule name="W wiek" id="w_wiek">
			<pattern>
			<token regexp="yes">M*(D?C{0,3}|C[DM])(L?X{0,3}|X[LC])(V?I{0,3}|I[VX])|\d+</token>
			<marker><token>w</token></marker>
			<token>.</token>
			</pattern>
			<disambig postag="brev:pun"/>
			<example type="ambiguous" inputform="w[w/prep:acc:nwok,w/prep:loc:nwok,wiek/brev:pun]" outputform="w[wiek/brev:pun]">Dziwny był ten XX <marker>w</marker>.</example>
			<example type="untouched">Mam to w szufladzie.</example>
	</rule>
	<rule name="W prep" id="w_prep">
			<pattern>
				<token postag_regexp="yes" postag="prep:(acc|loc):nwok">w</token>
			</pattern>
			<disambig action="filter" postag="^(?!brev:pun).*"/>
			<example type="ambiguous" inputform="w[w/prep:acc:nwok,w/prep:loc:nwok,wiek/brev:pun]" outputform="w[w/prep:acc:nwok,w/prep:loc:nwok]">Mam to <marker>w</marker> szufladzie.</example>
			<example type="untouched">Dziwny XIX w.</example>
	</rule>
	
	
    <rulegroup name="Przyimek z rzeczownikiem" id="PREP_SUBST">
    <rule>
        <pattern>
            <unify> <feature id="case"/>
                <token postag="prep.*" postag_regexp="yes"><exception postag="prep.*" negate_pos="yes" postag_regexp="yes"/><exception>co</exception><exception postag="&lt;/?[\p{Lu}:]+&gt;" postag_regexp="yes"/></token>
                <token postag="(adj|subst|ppron.*|ppas|pact):.*" postag_regexp="yes"><exception>co</exception><exception postag="&lt;/?[\p{Lu}:]+&gt;|qub" postag_regexp="yes"/></token>
            </unify>
        </pattern>
        <disambig action="unify"></disambig>
        <example type="untouched">Tu mamy piękny przykład.</example>
        <example type="untouched">Łaciny używamy na co dzień.</example>        
        <!-- example type="ambiguous" inputform="mamy[mama/subst:pl:acc:f,mama/subst:pl:nom:f,mama/subst:pl:voc:f,mama/subst:sg:gen:f]" outputform="mamy[mama/subst:sg:gen:f]">Idę do <marker>mamy</marker>.</example>  -->
    </rule>
    <rule>
        <pattern>
            <unify> <feature id="case"/>
                <token>przeciw</token>
                <token postag="(adj|subst|ppron.*|ppas|pact):.*" postag_regexp="yes"><exception>co</exception><exception postag="&lt;/?[\p{Lu}:]+&gt;|qub" postag_regexp="yes"/></token>
            </unify>
        </pattern>
        <disambig action="unify"></disambig>
        <example type="untouched">Tu mamy piękny przykład.</example>
        <example type="untouched">Łaciny używamy na co dzień.</example>
        <example type="ambiguous" inputform="krzywdzie[krzywda/subst:sg:dat:f,krzywda/subst:sg:loc:f]" 
        	outputform="krzywdzie[krzywda/subst:sg:dat:f]">Występuję przeciw <marker>krzywdzie</marker>.</example>                
    </rule>    
    <rule>
    	<pattern>
    		<marker><token regexp="yes">jako?|a|niż|niczym</token></marker> <!-- jeśli a, jak, jako, niczym, niż nie występuje z mianownikiem, to nie jest przyimkiem -->
    		<token postag="subst:.*" postag_regexp="yes"><exception postag=".*nom.*|conj|adv.*" postag_regexp="yes"></exception><exception regexp="yes">.*um</exception><exception postag="&lt;/ADV&gt;"></exception></token>
    	</pattern>
    	<disambig><match no="1" postag="^(?!prep:nom).*" postag_regexp="yes"></match></disambig> 
    	<example type="untouched">Mówię dziś jako rzecznik samorządu przedszkolnego.</example>
    	<example type="ambiguous" inputform="jako[jaka/subst:sg:voc:f,jako/adv,jako/conj,jako/prep:nom]" outputform="jako[jaka/subst:sg:voc:f,jako/adv,jako/conj]">Można to określić <marker>jako</marker> ewolucję.</example>
    </rule>
	</rulegroup>		

    <!-- now not that greedy :) -->
    <rulegroup name="unifikacja przymiotnika z rzeczownikiem" id="unify_adj_subst">
        <rule>
            <pattern>
                <marker>
                    <unify>
                        <feature id="number"/><feature id="gender"/> <feature id="case"/>
                        <token postag="adj.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="adj.*"/></token>
                        <token postag="subst.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="subst.*"/><exception postag="subst:irreg"/></token>
                    </unify>
                </marker>
            </pattern>
            <disambig action="unify"/>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <unify> <feature id="number"/><feature id="gender"/> <feature id="case"/>
                        <token postag="subst.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="subst.*"/><exception postag="subst:irreg"/></token>
                        <token postag="adj.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="adj.*"/></token>
                    </unify>
                </marker>
            </pattern>
            <disambig action="unify"/>
        </rule>
        <rule>
            <pattern>
                <unify>
                    <feature id="number"/><feature id="gender"/> <feature id="case"/>
                    <token postag="pact.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="pact.*"/></token>
                    <token postag="subst.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="subst.*"/><exception postag="subst:irreg"/></token>
                </unify>
            </pattern>
            <disambig action="unify"/>
        </rule>
        <rule>
            <pattern>
                <unify> <feature id="number"/><feature id="gender"/> <feature id="case"/>
                    <token postag="subst.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="subst.*"/><exception postag="subst:irreg"/></token>
                    <token postag="pact.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="pact.*"/></token>
                </unify>
            </pattern>
            <disambig action="unify"/>
        </rule>
        <rule>
            <pattern>
                <unify>
                    <feature id="number"/><feature id="gender"/> <feature id="case"/>
                    <token>jedna</token>
                    <token postag="subst.*|adj.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="subst.*|adj.*"/><exception postag="subst:irreg"/></token>
                </unify>
            </pattern>
            <disambig action="unify"/>
            <example type="untouched">On jedna sobie tłumy.</example>
            <example type="ambiguous" inputform="jedna[jeden/adj:sg:nom.voc:f:pos,jednać/verb:fin:sg:ter:imperf:refl.nonrefl]" outputform="jedna[jeden/adj:sg:nom.voc:f:pos]">To jest <marker>jedna</marker> osoba.</example>
            <example type="ambiguous" inputform="jedna[jeden/adj:sg:nom.voc:f:pos,jednać/verb:fin:sg:ter:imperf:refl.nonrefl]" outputform="jedna[jeden/adj:sg:nom.voc:f:pos]">To jest ta <marker>jedna</marker> jedyna.</example>
        </rule>

    </rulegroup>

    <!--  too greedy!
     <rule name="uzgadniamy dwa przymiotniki" id="ADJ_ADJ_UNIFY">
     <pattern mark_from="0" mark_to="0">
         <unify> <feature id="number"/><feature id="gender"/> <feature id="case"/>
           <token postag="(adj|pact).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(adj|pact).*"/></token>
           <token postag="(adj|pact).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(adj|pact).*"/></token>
         </unify>
     </pattern>
     <disambig action="unify"/>
     <example type="untouched">To jest węgiel kamienny małej wartości</example>
     <example type="ambiguous" inputform="taki[taki/adj:sg:acc.nom:m3:pos,taki/adj:sg:nom.voc:m1.m2:pos,taka/subst:pl:gen:f,taka/subst:pl:acc.nom.voc:f,taka/subst:sg:dat.gen.loc:f]" outputform="taki[taki/adj:sg:acc.nom:m3:pos,taki/adj:sg:nom.voc:m1.m2:pos]">Ona jest <marker>wierząca</marker> niepraktykująca.</example>
     </rule>
      -->

    <rule name="mają to nie maić" id="MAJA_MAIC">
        <pattern>
            <token>mają</token>
        </pattern>
        <disambig action="filter"><match no="1">mieć</match></disambig>
        <example type="untouched">Oni mieli robaki.</example>
        <example type="ambiguous" inputform="mają[maić/verb:fin:pl:ter:imperf:refl.nonrefl,maja/subst:sg:inst:f,mieć/verb:fin:pl:ter:imperf:refl.nonrefl]" outputform="mają[mieć/verb:fin:pl:ter:imperf:refl.nonrefl]">Oni <marker>mają</marker> robaki.</example>
    </rule>

    <rule name="sporo to nie spora" id="SPORO">
        <pattern>
            <token>sporo</token>
        </pattern>
        <disambig action="filter" postag="adv:pos:aff"/>
    </rule>

    <rule name="nie na początku zdania" id="NIE_ADAMP">
        <pattern>
            <token postag="SENT_START"/>
            <marker>
                <token>nie</token>
            </marker>
        </pattern>
        <disambig postag="qub"/>
    </rule>

    <rulegroup name="chcąc nie chcąc" id="chcac-nie-chcac">
        <rule>
            <pattern>
                <marker>
                    <token skip="1">chcąc</token>
                </marker>
                <token>nie<exception scope="previous" regexp="yes" negate="yes">,|chcąc</exception></token>
                <token>chcąc</token>
            </pattern>
            <disambig postag="qub"/>
        </rule>
        <rule>
            <pattern>
                <token skip="1">chcąc</token>
                <token>nie<exception scope="previous" regexp="yes" negate="yes">,|chcąc</exception></token>
                <marker>
                    <token>chcąc</token>
                </marker>
            </pattern>
            <disambig postag="qub"/>
        </rule>
    </rulegroup>

    <rule name="nawiasem mówiąc" id="nawiasem-mowiac">
        <pattern>
            <token regexp="yes">nawiasem|krótko|prawdę|ściśle</token>
            <marker>
                <token>mówiąc</token>
            </marker>
        </pattern>
        <disambig postag="qub"/>
    </rule>

    <rule name="oklep" id="na-oklep">
        <pattern>
            <token>na</token>
            <marker>
                <token regexp="yes">oklep|oślep</token>
            </marker>
        </pattern>
        <disambig postag="qub">
        </disambig>
    </rule>

    <rulegroup name="chybił trafił" id="chybil-trafil">
        <rule>
            <pattern>
                <token>na</token>
                <marker>
                    <token>chybił</token>
                </marker>
                <token>trafił</token>
            </pattern>
            <disambig postag="qub"/>
        </rule>
        <rule>
            <pattern>
                <token>na</token>
                <token>chybił</token>
                <marker>
                    <token>trafił</token>
                </marker>
            </pattern>
            <disambig postag="qub"/>
        </rule>
    </rulegroup>

    <rule name="obok, dookoła, wewnątrz -> adv" id="obok">
        <pattern>
            <marker>
                <token regexp="yes">obok|dookoła|wewnątrz</token>
            </marker>
            <token postag="subst:.*" postag_regexp="yes"><exception postag="subst:.*gen.*" postag_regexp="yes"/></token>
        </pattern>
        <disambig postag="adv:pos"/>
    </rule>

    <rulegroup name="mam -> subst" id="mam">
        <rule>
            <pattern>
                <token postag="prep:.*gen.*" postag_regexp="yes"/>
                <marker>
                    <token>mam</token>
                </marker>
            </pattern>
            <disambig action="filter"><match no="2" postag="subst:pl:.*" postag_regexp="yes"/></disambig>
        </rule>
    </rulegroup>

    <rule name="miał + inf -> verb" id="mial">
        <pattern>
            <marker>
                <token>miał</token>
            </marker>
            <token postag_regexp="yes" postag="verb:inf.*"/>
        </pattern>
        <disambig action="filter" postag="verb.*"/>
    </rule>

    <!-- TODO: oznakować tak jak rzeczownik po skrócie -->
    <rule name="dr, mgr + . => qub" id="dr_mgr_kropka">
        <pattern>
            <marker>
                <token regexp="yes">dr|mgr|nr|kmdr|kmdt|arcybp|bp|abp|gen|ul</token>
            </marker>
            <token>.</token>
        </pattern>
        <disambig postag="qub"/>
    </rule>

    <rulegroup name="lecz" id="lecz">
        <rule>
            <pattern>
                <marker>
                    <token>lecz</token>
                </marker>
                <token>się</token>
                <token>sam</token>
                <token regexp="yes">[\.!,-—…]+</token>
            </pattern>
            <disambig action="filter" postag="verb:impt.*"/>
        </rule>
        <rule>
            <pattern>
                <token>,</token>
                <marker>
                    <token>lecz</token>
                </marker>
            </pattern>
            <disambig postag="conj"/>
        </rule>
    </rulegroup>

<!-- 
    <rule name="wzgledem" id="względem">
        <pattern>
            <marker>
                <token>względem<exception scope="previous">pod</exception></token>
            </marker>
            <token postag_regexp="yes" postag=".*[:\.]gen[:\.].*"/>
        </pattern>
        <disambig action="add"><wd lemma="względem" pos="prep:gen">względem</wd></disambig>
        <example type="untouched">Tu mamy piękny przykład pod względem architektury.</example>
        <example type="ambiguous" inputform="względem[wzgląd/subst:sg:inst:m3,względem/prep:gen]" outputform="względem[wzgląd/subst:sg:inst:m3,względem/prep:gen]">Tu mamy piękny przykład, <marker>względem</marker> którego nie będziemy się kierować.</example>
    </rule>
 -->
 
    <rulegroup name="rzadkie rzeczowniki" id="subst">
        <rule>
            <pattern>
                <token regexp="yes">taka|taką</token>
            </pattern>
            <disambig action="filter" postag="adj.*"/>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">kłamie|czekał</token>
            </pattern>
            <disambig action="filter" postag="verb.*"/>
        </rule>
        <rule>
            <pattern>
                <token>nic</token>
            </pattern>
            <disambig action="remove"><wd lemma="nica" pos="subst:pl:gen:f">nic</wd></disambig>
        </rule>
    </rulegroup>

    <rulegroup name="winny/winien -> przymiotnik" id="winien">
        <rule>
            <pattern>
                <unify> <feature id="number"/>
                    <token postag="verb:winien.*" postag_regexp="yes" regexp="yes">win.*</token>
                    <token inflected="yes" postag="verb:.*" postag_regexp="yes">być</token>
                </unify>
            </pattern>
            <disambig action="filter" postag="adj.*"/>
            <example type="untouched">Powinien był pójść do lekarza.</example>
            <example type="ambiguous" inputform="Winni[winien/verb:winien:pl:m1.p1:ter:imperf:nonrefl,winny/adj:pl:nom.voc:m1.p1:pos,winny/subst:pl:nom:m1,winny/subst:pl:voc:m1]" outputform="Winni[winny/adj:pl:nom.voc:m1.p1:pos]"><marker>Winni</marker> są już ukarani.</example>
        </rule>
        <rule>
            <pattern>
                <unify>
                    <feature id="number"/>
                    <token inflected="yes" postag="verb:.*" postag_regexp="yes">być</token>
                    <marker>
                        <token postag="verb:winien.*" postag_regexp="yes" regexp="yes">win.*</token>
                    </marker>
                </unify>
            </pattern>
            <disambig action="filter" postag="adj.*"/>
            <example type="untouched">Powinien był pójść do lekarza.</example>
            <example type="untouched">Każdy winien przestrzegać prawa!</example>
            <example type="ambiguous" inputform="winni[winien/verb:winien:pl:m1.p1:ter:imperf:nonrefl,winny/adj:pl:nom.voc:m1.p1:pos,winny/subst:pl:nom:m1,winny/subst:pl:voc:m1]" outputform="winni[winny/adj:pl:nom.voc:m1.p1:pos]">To oni są <marker>winni</marker>!</example>
        </rule>
    </rulegroup>

<!-- 
    <rulegroup name="zdarzył w sensie niezwrotnym" id="LOS_ZDARZYL">
        <rule>
            <pattern>
                <token regexp="yes" skip="-1">los|przypadek<exception scope="next" regexp="yes">się|,</exception></token>
                <marker>
                    <token>zdarzył</token>
                </marker>
            </pattern>
            <disambig action="remove"><wd lemma="zdarzyć" pos="refl">zdarzył</wd></disambig>
            <example type="untouched">To nie przypadek, że ten wypadek zdarzył się tu.</example>
            <example type="ambiguous" inputform="zdarzył[zdarzyć/refl,zdarzyć/verb:praet:sg:ter:m:perf]" outputform="zdarzył[zdarzyć/verb:praet:sg:ter:m:perf]">Los tak <marker>zdarzył</marker>, mój panie.</example>
        </rule>
        <rule id="LOS2">
            <pattern>
                <marker>
                    <token skip="-1">zdarzył</token>
                </marker>
                <token regexp="yes">los|przypadek</token>
            </pattern>
            <disambig action="remove"><wd lemma="zdarzyć" pos="refl">zdarzył</wd></disambig>
            <example type="untouched">To nie przypadek, że ten wypadek zdarzył się tu.</example>
            <example type="ambiguous" inputform="zdarzył[zdarzyć/refl,zdarzyć/verb:praet:sg:ter:m:perf]" outputform="zdarzył[zdarzyć/verb:praet:sg:ter:m:perf]">Tak <marker>zdarzył</marker> los, mój panie.</example>
        </rule>
    </rulegroup>
 -->
 
	<!--  TODO: czy to nadal potrzebne po PoliMorfie? 
    <rule name="skrótowce jako nieodmienne" id="SKROTOWCE_IRREG">
        <pattern>
            <token postag="prep:.*" postag_regexp="yes"/>
            <marker>
                <token regexp="yes">\p{Lu}+[i]*\p{Lu}{1,4}+</token>
            </marker>
        </pattern>
        <disambig postag="subst:irreg"/>
        <example type="untouched">ONZ wystosowała pismo do redakcji Przeglądu Wędkarskiego.</example>
        <example type="ambiguous" inputform="ONZ[ONZ/subst:pl:gen:m3,ONZ/subst:sg:gen:m3]" outputform="ONZ[ONZ/subst:irreg]">Do <marker>ONZ</marker> dotarło pismo z redakcji Przeglądu Wędkarskiego.</example>
    </rule>
    -->

    <rule name="wiodący w sensie właściwym" id="WIADACY_ADJ">
        <pattern>
            <unify> <feature id="number"/><feature id="gender"/> <feature id="case"/>
                <token skip="5" regexp="yes" inflected="yes">trasa|szlak|droga|trakt|drogi</token>
                <marker>
                    <token inflected="yes" postag="pact.*" postag_regexp="yes">wieść</token>
                </marker>
            </unify>
        </pattern>
        <disambig action="replace"><match no="1" postag_regexp="yes" postag="pact(.*):imperf:aff:refl.nonrefl" postag_replace="adj$1:pos"/></disambig>
        <example type="untouched">Tematem wiodącym tej książki są grzyby.</example>
        <example type="ambiguous" inputform="wiodącą[wieść/pact:sg:acc.inst:f:imperf:aff:refl.nonrefl]" outputform="wiodącą[wieść/adj:sg:acc.inst:f:pos]">Szedłem drogą <marker>wiodącą</marker> w stronę wioski.</example>
    </rule>

    <rulegroup name="co innego" id="CO_INNEGO">
        <rule>
            <pattern>
                <marker>
                    <token>co</token>
                </marker>
                <token>innego</token>
            </pattern>
            <disambig action="add"><wd lemma="co" pos="co_innego">co</wd></disambig>
            <example type="untouched">To było coś innego.</example>
            <example type="ambiguous" inputform="co[co/comp,co/prep:acc,co/prep:nom,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]" outputform="co[co/co_innego,co/comp,co/prep:acc,co/prep:nom,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]">To było <marker>co</marker> innego.</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token>czym</token>
                </marker>
                <token>innym</token>
            </pattern>
            <disambig action="add"><wd lemma="co" pos="czym_innym">czym</wd></disambig>
            <example type="untouched">To było coś innego.</example>
            <example type="ambiguous" inputform="czym[co/subst:sg:inst:n2,co/subst:sg:loc:n2,czym/conj]" outputform="czym[co/czym_innym,co/subst:sg:inst:n2,co/subst:sg:loc:n2,czym/conj]">Mowa o <marker>czym</marker> innym.</example>
        </rule>
    </rulegroup>

    <rule name="co drugi" id="CO_DRUGI">
        <pattern>
            <marker>
                <token>co</token>
            </marker>
            <token inflected="yes" regexp="yes">drugi|trzeci|czwarty|piąty|szósty|siódmy|ósmy|dziewiąty|dziesiąty</token>
        </pattern>
        <disambig action="add"><wd lemma="co" pos="co_drugi">co</wd></disambig>
        <example type="untouched">To było coś innego.</example>
        <example type="ambiguous" inputform="co[co/comp,co/prep:acc,co/prep:nom,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]" outputform="co[co/co_drugi,co/comp,co/prep:acc,co/prep:nom,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]">Spotykamy się w <marker>co</marker> drugi wtorek.</example>
    </rule>

    <rulegroup name="To co...? -> conj" id="TO_CO">
        <rule>
            <pattern>
                <token postag="SENT_START"/>
                <marker>
                    <token>to</token>
                </marker>
                <token skip="-1" regexp="yes">co|kto</token>
                <token postag="SENT_END">?</token>
            </pattern>
            <disambig postag="conj"/>
            <example type="untouched">To co zrobiłeś jest chamstwem.</example>
            <example type="ambiguous" inputform="To[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos,to/conj,to/qub,to/subst:sg:acc:n2,to/subst:sg:nom:n2]" outputform="To[to/conj]"><marker>To</marker> co mam zrobić?</example>
        </rule>
        <rule>
            <pattern>
                <token postag="SENT_START"/>
                <token>no</token>
                <marker>
                    <token>to</token>
                </marker>
                <token skip="-1" regexp="yes">co|kto</token>
                <token postag="SENT_END">?</token>
            </pattern>
            <disambig postag="conj"/>
            <example type="untouched">To co zrobiłeś jest chamstwem.</example>
            <example type="ambiguous" inputform="to[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos,to/conj,to/qub,to/subst:sg:acc:n2,to/subst:sg:nom:n2]" outputform="to[to/conj]">No <marker>to</marker> co mam zrobić?</example>
        </rule>
        <rule>
            <pattern>
                <token postag="SENT_START"/>
                <marker>
                    <token>to</token>
                </marker>
                <token skip="-1" regexp="yes">co|kto</token>
                <token>?</token>
                <token>.</token>
                <token>.</token>
                <token postag="SENT_END">.</token>
            </pattern>
            <disambig postag="conj"/>
            <example type="untouched">To co zrobiłeś jest chamstwem.</example>
            <example type="ambiguous" inputform="To[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos,to/conj,to/qub,to/subst:sg:acc:n2,to/subst:sg:nom:n2]" outputform="To[to/conj]"><marker>To</marker> co mam zrobić?...</example>
        </rule>
        <rule>
            <pattern>
                <token postag="SENT_START"/>
                <token>no</token>
                <marker>
                    <token>to</token>
                </marker>
                <token skip="-1" regexp="yes">co|kto</token>
                <token>?</token>
                <token>.</token>
                <token>.</token>
                <token postag="SENT_END">.</token>
            </pattern>
            <disambig postag="conj"/>
            <example type="untouched">To co zrobiłeś jest chamstwem.</example>
            <example type="ambiguous" inputform="to[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos,to/conj,to/qub,to/subst:sg:acc:n2,to/subst:sg:nom:n2]" outputform="to[to/conj]">No <marker>to</marker> co mam zrobić?...</example>
        </rule>
    </rulegroup>

    <rule name="Jest to -> ten/adj" id="TO_TEN_ADJ">
        <pattern>
            <token regexp="yes">jest|będzie|był[oa]?</token>
            <marker>
                <token>to</token>
            </marker>
        </pattern>
        <disambig postag="adj:sg:nom.voc:n1.n2:pos"/>
        <example type="untouched">To jest problem.</example>
        <example type="ambiguous" inputform="to[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos,to/conj,to/qub,to/subst:sg:acc:n2,to/subst:sg:nom:n2]" outputform="to[ten/adj:sg:nom.voc:n1.n2:pos]" >Jest <marker>to</marker> problem.</example>
    </rule>

	<!--  for za_pewne rule -->
	<rule name="pewne qub" id="pewne_qub">
		<pattern>
			<marker><token>pewne</token></marker>
		</pattern>
		<disambig action="add"><wd lemma="pewne" pos="qub">pewne</wd></disambig>
	</rule>


    <rule name="Oznaczenie przyimka za wymaganego przez czasownik" id="ZA_DEP">
        <pattern>
            <token skip="5" regexp="yes" inflected="yes">uważać|dziękować|przepraszać|uchodzić|przeprosić|uznać|uznawać|odpowiadać<exception scope="next" regexp="yes">[\p{Punct}—–„«»…&amp;&amp;[^\.]]+</exception></token>
            <marker>
                <token>za<exception postag="&lt;/PREP:ACC&gt;"></exception></token>
            </marker>
        </pattern>
        <disambig action="add"><wd lemma="za" pos="DEP">za</wd></disambig>
        <example type="untouched">Potrwa to za pewne kilka dni.</example>
        <example type="ambiguous" inputform="za[za/prep:acc,za/prep:gen,za/prep:inst,za/qub]" outputform="za[za/DEP,za/prep:acc,za/prep:gen,za/prep:inst,za/qub]">Chciałbym przeprosić <marker>za</marker> pewne nieporozumienie.</example>
    </rule>

    <rule name="pewny + rzeczownik" id="PEWNE_UNIFY">
        <pattern>
            <unify> <feature id="number"/><feature id="gender"/> <feature id="case"/>
                <token>pewne</token>
                <token postag="subst.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="subst.*"/><exception postag="subst:irreg"/></token>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Za pewne tak uważam.</example>
        <example type="ambiguous" inputform="pewne[pewien/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,pewien/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos,pewien/adj:sg:acc:n1.n2:pos,pewien/adj:sg:nom.voc:n1.n2:pos,pewne/qub,pewne/subst:pl:acc:n2,pewne/subst:pl:nom:n2,pewne/subst:pl:voc:n2,pewne/subst:sg:acc:n2,pewne/subst:sg:nom:n2,pewne/subst:sg:voc:n2,pewny/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,pewny/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos,pewny/adj:sg:acc:n1.n2:pos,pewny/adj:sg:nom.voc:n1.n2:pos]" outputform="pewne[pewien/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos,pewny/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos]">Za <marker>pewne</marker> kwoty można kupić nawet krowę.</example>
    </rule>

    <!--  useful for removing false alarms for non-detected sentence-ends (note: it doesn't break the sentence for real) -->
    <rule name="Oznaczenie końca zdania" id="SRX_PL_FIX">
        <pattern>
            <token regexp="yes">\p{L}</token>
            <marker>
                <token>.</token>
            </marker>
            <and>
                <token inflected="yes" regexp="yes"><exception inflected="yes" regexp="yes">\p{Lu}.*</exception>\p{Ll}+</token>
                <token regexp="yes">\p{Lu}\p{Ll}+</token>
            </and>
        </pattern>
        <disambig action="add"><wd lemma="." pos="SENT_END">.</wd></disambig>
        <example type="untouched">To jest Józef R. Asdaafvafsf</example>
        <example type="ambiguous" inputform=".[.]" outputform=".[&lt;/S&gt;]">To jest cząstka B<marker>.</marker> Dopiero w niej jest cząstka A.</example>
    </rule>

    <rule name="Dwukropek w zapisie liczb, np. godzin lub proporcji" id="DWUKROPEK_GODZINA">
        <pattern>
            <token regexp="yes">\d+</token>
            <marker>
                <token spacebefore="no">:</token>
            </marker>
            <token spacebefore="no" regexp="yes">\d+</token>
        </pattern>
        <disambig action="add"><wd pos="interp:nospace"/></disambig>
        <example type="untouched">Punkt 5: zrównać płacę minimalną.</example>
        <example type="ambiguous" inputform=":[:]" outputform=":[:/interp:nospace]">Pociąg odjeżdża o 15<marker>:</marker>34.</example>
    </rule>

    <!--  tagging punctuation -->
    <rule name="Interpunkcja - bez kropki" id="PUNCT_NO_DOT">
        <pattern>
            <token regexp="yes">[\p{Punct}—–„«»…”&amp;&amp;[^!\.]]<exception postag="SENT_END"/><exception postag="interp:nospace"/></token>
        </pattern>
        <disambig action="add"><wd pos="interp:comma"/></disambig>
        <example type="untouched">To jest głowa dr. Jekylla.</example>
        <example type="untouched">Pociąg odjeżdża o 15:45.</example>
        <example type="ambiguous" inputform=",[,]" outputform=",[,/interp:comma]">To jest coś<marker>,</marker> co wiedziałem od dawna.</example>
    </rule>

    <!-- conjunctions that take a comma -->
    <rule name="Spójniki wymagające przecinka lub zastępujące go" id="COMP_COMMA">
        <pattern>
            <token inflected="yes" regexp="yes">aby|acz|aczkolwiek|albo|albowiem|ale|aleć|aliści|ani|azali|ażeby|bo|byleby|bądź|czy|czyli|czyliż|dlaczego|dopóki|dopóty|gdy|gdyby|gdyż|gdyżby|i|ilekolwiek|ilekroć|iż|iżby|jaki|jeśli|jeżeli|kiedy|który|którędy|lecz|lub|oraz|ponieważ|póki|wszelako|zanim|że|żeby</token>
        </pattern>
        <disambig action="add"><wd pos="comp:comma"/></disambig>
        <example type="untouched">To jest krowa.</example>
        <example type="ambiguous" inputform="ale[ale/conj,ale/qub]" outputform="ale[ale/comp:comma,ale/conj,ale/qub]">Lubię go, <marker>ale</marker> kupię mu pistolet.</example>
    </rule>

    <rule name="Blokada reguły interpunkcyjnej dla daje vu" id="DAJE_VU_BLOKADA">
        <pattern>
            <marker>
                <token>daje</token>
            </marker>
            <token>vu</token>
        </pattern>
        <disambig action="replace"><match no="1" postag_regexp="yes" postag="verb:fin:sg:ter:imperf:refl.nonrefl" postag_replace="qub"/></disambig>
        <example type="untouched">On daje mu w ryj.</example>
        <example type="ambiguous" inputform="daje[dawać/verb:fin:sg:ter:imperf:refl.nonrefl]" outputform="daje[dawać/qub]">On przeżył <marker>daje</marker> vu.</example>
    </rule>

    <rulegroup name="byc moze -> qub" id="MOZE_QUB">
        <rule>
            <pattern>
                <token>być</token>
                <marker>
                    <token>może</token>
                </marker>
            </pattern>
            <disambig postag="qub"/>
            <example type="untouched">On może być debilem.</example>
            <example type="ambiguous" inputform="może[może/qub,móc/verb:fin:sg:ter:imperf:nonrefl]" outputform="może[może/qub]">On być <marker>może</marker> jest debilem</example>
        </rule>
    </rulegroup>


    <rule name="immunize_Windows" id="KOSHER_WINDOWS">
        <pattern>
            <token>dla</token>
            <marker>
                <token>Windows</token>
            </marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    
    <rule name="m.in." id="M_IN">
    	<pattern case_sensitive="yes">
    		<marker><token>m</token></marker>    	
    	<token>.</token>
    	<token regexp="yes">i[mn]</token>
    	<token>.</token>
    	</pattern>
    	<disambig action="replace"><match no="1" postag_regexp="yes" postag="brev:npun" postag_replace="brev:pun"/></disambig>
    	<example type="ambiguous" inputform="m[metr/brev:npun]" outputform="m[metr/brev:pun]">Jest to <marker>m</marker>.in. kretyn.</example>
    </rule>
    
    <rule name=".pl" id="PL_DOMAIN_NAME">
    	<pattern>
    		<token>.</token>
    		<marker>
    		<token spacebefore="no">pl</token>
    		</marker>
    	</pattern>
    	<disambig action="remove"><wd lemma="plac"/></disambig>
    	<example type="ambiguous" inputform="pl[plac/brev:pun]" outputform="pl[pl]">Alergie.mp.<marker>pl</marker> - serwis</example>
    	<example type="untouched">Adres: pl. Zbawiciela 122</example>
    </rule>
	<rule name=".jp" id="JP_DOMAIN_NAME">
    	<pattern>
    		<token>.</token>
    		<marker>
    		<token spacebefore="no">jp</token>
    		</marker>
    	</pattern>
    	<disambig action="remove"><wd lemma="jak poprzednio"/></disambig>
    	<example type="ambiguous" inputform="jp[jak poprzednio/brev:pun]" outputform="jp[jp]">Alergie.mp.<marker>jp</marker> - serwis</example>
    	<example type="untouched">Skrót - jp.</example>
    </rule>
    <rule name="KC" id="KC">
    	<pattern case_sensitive="yes">
    		<marker><token>KC</token></marker>
    		<token regexp="yes">KPZR|PZPR</token>
    	</pattern>
    	<disambig action="remove"><wd lemma="kodeks cywilny"/></disambig>
    	<example type="ambiguous" inputform="KC[KC/subst:pl:acc:m3,KC/subst:pl:acc:n2,KC/subst:pl:dat:m3,KC/subst:pl:dat:n2,KC/subst:pl:gen:m3,KC/subst:pl:gen:n2,KC/subst:pl:inst:m3,KC/subst:pl:inst:n2,KC/subst:pl:loc:m3,KC/subst:pl:loc:n2,KC/subst:pl:nom:m3,KC/subst:pl:nom:n2,KC/subst:pl:voc:m3,KC/subst:pl:voc:n2,KC/subst:sg:acc:m3,KC/subst:sg:acc:n2,KC/subst:sg:dat:m3,KC/subst:sg:dat:n2,KC/subst:sg:gen:m3,KC/subst:sg:gen:n2,KC/subst:sg:inst:m3,KC/subst:sg:inst:n2,KC/subst:sg:loc:m3,KC/subst:sg:loc:n2,KC/subst:sg:nom:m3,KC/subst:sg:nom:n2,KC/subst:sg:voc:m3,KC/subst:sg:voc:n2,kodeks cywilny/brev:pun]" outputform="KC[KC/subst:pl:acc:m3,KC/subst:pl:acc:n2,KC/subst:pl:dat:m3,KC/subst:pl:dat:n2,KC/subst:pl:gen:m3,KC/subst:pl:gen:n2,KC/subst:pl:inst:m3,KC/subst:pl:inst:n2,KC/subst:pl:loc:m3,KC/subst:pl:loc:n2,KC/subst:pl:nom:m3,KC/subst:pl:nom:n2,KC/subst:pl:voc:m3,KC/subst:pl:voc:n2,KC/subst:sg:acc:m3,KC/subst:sg:acc:n2,KC/subst:sg:dat:m3,KC/subst:sg:dat:n2,KC/subst:sg:gen:m3,KC/subst:sg:gen:n2,KC/subst:sg:inst:m3,KC/subst:sg:inst:n2,KC/subst:sg:loc:m3,KC/subst:sg:loc:n2,KC/subst:sg:nom:m3,KC/subst:sg:nom:n2,KC/subst:sg:voc:m3,KC/subst:sg:voc:n2]"><marker>KC</marker> KPZR</example>
    </rule>
    <rule name="R - nie rok" id="NON_START_POS_R">
    	<pattern case_sensitive="yes">
    		<marker><token>R<exception scope="previous" postag="SENT_START"></exception></token></marker>
    	</pattern>
    	<disambig action="remove"><wd lemma="rok"/></disambig>
    	<example type="untouched">R. 2012</example>
    	<example type="ambiguous" inputform="R[rok/brev:pun]" outputform="R[R]">Enancjomer <marker>R</marker> jest ważny.</example>
    </rule>
    <rule name="in w wyrażeniach łacińskich" id="in">
    	<pattern>
    		<marker><token>in</token></marker>
    		<token regexp="yes">absentia|abstracto|aeternum|aqua|blanco|crudo|dubio|effectu|effigie|extenso|extremis|fidem|flagranti|genere|gratiam|gremio|margine|medias|memoriam|minus|octavo|persona|plus|praxi|puncto|saecula|spe|statu|triplo|vitro|vivo|rebus|bello</token>
    	</pattern>
    	<disambig postag="ign"/>
    	<example type="ambiguous" inputform="in[in/subst:pl:acc:n2,in/subst:pl:dat:n2,in/subst:pl:gen:n2,in/subst:pl:inst:n2,in/subst:pl:loc:n2,in/subst:pl:nom:n2,in/subst:pl:voc:n2,in/subst:sg:acc:n2,in/subst:sg:dat:n2,in/subst:sg:gen:n2,in/subst:sg:inst:n2,in/subst:sg:loc:n2,in/subst:sg:nom:n2,in/subst:sg:voc:n2,inaczej/brev:pun]" outputform="in[in/ign]">Zapłodnienie <marker>in</marker> vitro</example>
    	<example type="untouched">M.in. dwóch ministrów</example>
    </rule>
    <rule name="em" id="em">
    	<pattern>
    		<token regexp="yes">[']</token>
    		<marker>
    		<token spacebefore="no">em</token>
    		</marker>
    	</pattern>
    	<disambig action="remove"><wd lemma="emerytowany"/></disambig>
    	<example type="untouched">Był to em. płk James Bond</example>
    	<example type="ambiguous" inputform="em[em/subst:pl:acc:n2,em/subst:pl:dat:n2,em/subst:pl:gen:n2,em/subst:pl:inst:n2,em/subst:pl:loc:n2,em/subst:pl:nom:n2,em/subst:pl:voc:n2,em/subst:sg:acc:n2,em/subst:sg:dat:n2,em/subst:sg:gen:n2,em/subst:sg:inst:n2,em/subst:sg:loc:n2,em/subst:sg:nom:n2,em/subst:sg:voc:n2,emerytowany/brev:pun]" outputform="em[em/subst:pl:acc:n2,em/subst:pl:dat:n2,em/subst:pl:gen:n2,em/subst:pl:inst:n2,em/subst:pl:loc:n2,em/subst:pl:nom:n2,em/subst:pl:voc:n2,em/subst:sg:acc:n2,em/subst:sg:dat:n2,em/subst:sg:gen:n2,em/subst:sg:inst:n2,em/subst:sg:loc:n2,em/subst:sg:nom:n2,em/subst:sg:voc:n2]">Maximilienem de Robespierre'<marker>em</marker> (Wojciech Pszoniak)</example>
    </rule>
    
     
    <rule name="1 luty" id="NUM_LUTY">
    	<pattern>
    	<token regexp="yes">\d+</token>
    	<marker><token>luty</token></marker>
    	</pattern>    	
    	<disambig action="remove"><wd lemma="lut"></wd></disambig>
    	<example type="untouched">To są zimne luty, przelutuj je.</example>
    	<example type="ambiguous" inputform="luty[lut/subst:pl:acc:m3,lut/subst:pl:nom:m3,lut/subst:pl:voc:m3,luty/adj:sg:acc:m3:pos,luty/adj:sg:nom.voc:m1.m2.m3:pos,luty/subst:sg:acc:m3,luty/subst:sg:nom:m3,luty/subst:sg:voc:m3]" outputform="luty[luty/adj:sg:acc:m3:pos,luty/adj:sg:nom.voc:m1.m2.m3:pos,luty/subst:sg:acc:m3,luty/subst:sg:nom:m3,luty/subst:sg:voc:m3]">25 <marker>luty</marker> to data.</example>
    </rule>
    
    <rule name="no, halo - interj" id="no_halo_interj">
    	<pattern>
    		<token postag="SENT_START"/>
    		<marker>
    		<token regexp="yes">no|halo|cóż</token>
    		</marker>
    	</pattern>
    	<disambig postag="interj"></disambig>
    </rule>
    
    <rule name="Tel Awiw" id="TEL_AWIW">
    	<pattern case_sensitive="yes">
    		<marker>
    			<token>Tel</token>
    		</marker>
    		<token inflected="yes">Awiw</token>
    	</pattern>
    	<disambig action="replace"><match no="2" postag_regexp="yes" postag="subst.*">Tel</match></disambig>
    </rule>
    
    <rule name="n.e." id="NE_BREV">
    	<pattern>
    		<token>n</token>
    		<token>.</token>
    		<marker>
    		<token>e</token>
    		</marker>
    		<token>.</token>
    	</pattern>
    	<disambig action="add"><wd lemma="era" pos="brev:pun"/></disambig>
    </rule>
    
    <rule name="nn" id="NN_BREV">
    	<pattern>
    		<token>nn</token>
    		<token>.</token>
    	</pattern>
    	<disambig postag="brev:pun"/>
    </rule>	
    
    <rule name="red. nauk." id="red_nauk_brev">
    	<pattern>
    	<token>red</token>
    	<token>.</token>
    	<marker>
    	<token>nauk</token>
    	</marker>
    	<token>.</token>
    	</pattern>
    	<disambig action="add"><wd lemma="naukowy" pos="brev:pun"/></disambig>
    </rule>
    
    <rule name="n.p.m." id="npm">
    	<pattern>
    		<token regexp="yes">[np]</token>
    		<token>.</token>
    		<token>p</token>
    		<token>.</token>
    		<marker>
    			<token>m</token>
    		</marker>
    		<token>.</token>
    	</pattern>
    	<disambig action="replace"><wd lemma="morza" pos="brev:pun"/></disambig>
    	<example type="untouched">Przebiegł 20 m.</example>
    	<example type="ambiguous" inputform="m[metr/brev:npun]" outputform="m[morza/brev:pun]">Ta góra ma wysokość 20 m n. p. <marker>m</marker>.</example>
    </rule>
    
    <rule name="co jako qub" id="co_qub">
    	<pattern>
    		<marker>
    		<token>co</token>
    		</marker>
    		<unify><feature id="gender"/>
    		<feature id="case"></feature>
    		<feature id="number"></feature>
    		<token postag="adj.*:com" postag_regexp="yes"/>
    		<token postag="(subst|ger).*" postag_regexp="yes"/>
    		</unify>
    	</pattern>
    	<disambig postag="qub"/>
    	<example type="untouched">I, co ważniejsze, jest to dzisiaj rzadkość.</example>
    	<example type="ambiguous" inputform="co[co/comp,co/prep:acc,co/prep:nom,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]" outputform="co[co/qub]">Przy <marker>co</marker> trudniejszych fragmentach robił sobie notatki.</example>
    </rule>
    
    <!-- TODO: remove both from Morfologik! -->
    <rule name="C" id="C">
    	<pattern>
    	<token>C</token>
    	</pattern>
    	<disambig postag="qub"/>
    </rule>
    
    <rule name="K" id="K">
    	<pattern>
    	<token>K</token>
    	</pattern>
    	<disambig postag="qub"/>
    </rule>
    
    <rule name="poor man's agglutination" id="Gdybysie">
    	<pattern>
    		<token regexp="yes">(gdyby|jeśli|jeżeli|jeżeliby|jeśliby|gdy)(ś|śmy|ście|m)</token>
    	</pattern>
    	<disambig action="replace"><match no="1" postag="conj">gdyby</match></disambig>
    </rule>
    
    <rulegroup id="PIECIU" name="Pięciu jako gerundium">
    <rule>
    	<pattern>
    		<marker>
    			<token>pięciu</token>
    		</marker>
    		<token>się</token>
    		<token regexp="yes">wzwyż|po</token>
    	</pattern>
    	<disambig><match no="1" postag="ger.*"  postag_regexp="yes"/></disambig>
    	<example type="untouched">Widzę pięciu wyrostków.</example>
    	<example type="ambiguous" inputform="pięciu[piąć/ger:sg:dat.loc:n2:imperf:aff:refl,pięć/num:pl:acc:m1:rec,pięć/num:pl:gen.dat.inst.loc:m1.m2.m3.f.n2:congr,pięć/num:pl:nom.voc:m1:rec]" 
    	outputform="pięciu[piąć/ger:sg:dat.loc:n2:imperf:aff:refl]">Opowiem wam o <marker>pięciu</marker> się wzwyż.</example>
    </rule>
    <rule>
    	<pattern>
    		<marker>
    			<token>pięciu</token>
    		</marker>
    		<token>się</token>
    		<token>w</token>
    		<token>górę</token>
    	</pattern>
    	<disambig><match no="1" postag="ger.*"  postag_regexp="yes"/></disambig>
    	<example type="untouched">Widzę pięciu wyrostków.</example>
    	<example type="ambiguous" inputform="pięciu[piąć/ger:sg:dat.loc:n2:imperf:aff:refl,pięć/num:pl:acc:m1:rec,pięć/num:pl:gen.dat.inst.loc:m1.m2.m3.f.n2:congr,pięć/num:pl:nom.voc:m1:rec]" 
    	outputform="pięciu[piąć/ger:sg:dat.loc:n2:imperf:aff:refl]">Opowiem wam o <marker>pięciu</marker> się w górę.</example>
    </rule>    
    </rulegroup>
    <rule id="PIECIU_NUM" name="Pięciu jako liczebnik">
    	<pattern>
    		<marker><token postag="num.*" postag_regexp="yes">pięciu</token></marker>
    	</pattern>
    	<disambig action="filter" postag="^(?!ger:).*$"/>
    	<example type="ambiguous" inputform="pięciu[piąć/ger:sg:dat.loc:n2:imperf:aff:refl,pięć/num:pl:acc:m1:rec,pięć/num:pl:gen.dat.inst.loc:m1.m2.m3.f.n2:congr,pięć/num:pl:nom.voc:m1:rec]" 
    	outputform="pięciu[pięć/num:pl:acc:m1:rec,pięć/num:pl:gen.dat.inst.loc:m1.m2.m3.f.n2:congr,pięć/num:pl:nom.voc:m1:rec]">Widzę <marker>pięciu</marker> wyrostków.</example>
    	<example type="untouched">O pięciu się w górę nie słyszałem.</example>
    </rule>
        
    <rule name="wiadomo" id="Wiadomo">
    	<pattern>    		
    		<marker><token>wiadomo</token></marker>
    	</pattern>
    	<disambig postag="pred"/>
    	<example type="ambiguous" inputform="wiadomo[wiadomo/adv:pos,wiadomo/pred]" outputform="wiadomo[wiadomo/pred]">Jak <marker>wiadomo</marker>, nie tylko Marsjanie lubili pierogi.</example>    	
    </rule>
    
        
</rules>